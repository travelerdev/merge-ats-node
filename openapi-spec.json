{
  "openapi": "3.0.3",
  "info": {
    "title": "Merge ATS API",
    "version": "1.0",
    "description": "The unified API for building rich integrations with multiple Applicant Tracking System platforms.",
    "contact": {
      "name": "Merge Team",
      "url": "https://www.merge.dev/",
      "email": "hello@merge.dev"
    }
  },
  "paths": {
    "/account-details": {
      "get": {
        "operationId": "account_details_retrieve",
        "description": "Get details for a linked account.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          }
        ],
        "tags": ["account-details"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDetails"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/account-token/{public_token}": {
      "get": {
        "operationId": "account_token_retrieve",
        "description": "Returns the account token for the end user with the provided public token.",
        "parameters": [
          {
            "in": "path",
            "name": "public_token",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["account-token"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountToken"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/activities": {
      "get": {
        "operationId": "activities_list",
        "description": "Returns a list of `Activity` objects.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "created_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created after this datetime."
          },
          {
            "in": "query",
            "name": "created_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created before this datetime."
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "description": "The pagination cursor value.",
            "examples": {
              "CursorExample": {
                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                "summary": "Cursor Example"
              }
            }
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "type": "string",
              "enum": ["user"]
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
            "examples": {
              "ExpandUser": {
                "value": "user",
                "summary": "Expand User"
              }
            }
          },
          {
            "in": "query",
            "name": "include_deleted_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include data that was deleted in the third-party service."
          },
          {
            "in": "query",
            "name": "include_remote_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
          },
          {
            "in": "query",
            "name": "modified_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified after this datetime."
          },
          {
            "in": "query",
            "name": "modified_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified before this datetime."
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "remote_id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "description": "The API provider's ID for the given object."
          },
          {
            "in": "query",
            "name": "user_id",
            "schema": {
              "type": "string"
            },
            "description": "If provided, will only return activities done by this user.",
            "examples": {
              "UserId": {
                "summary": "user_id"
              }
            }
          }
        ],
        "tags": ["activities"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedActivityList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/activities/{id}": {
      "get": {
        "operationId": "activities_retrieve",
        "description": "Returns an `Activity` object with the given `id`.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "type": "string",
              "enum": ["user"]
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
            "examples": {
              "ExpandUser": {
                "value": "user",
                "summary": "Expand User"
              }
            }
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "include_remote_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
          }
        ],
        "tags": ["activities"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/applications": {
      "get": {
        "operationId": "applications_list",
        "description": "Returns a list of `Application` objects.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "candidate_id",
            "schema": {
              "type": "string"
            },
            "description": "If provided, will only return applications for this candidate.",
            "examples": {
              "CandidateId": {
                "summary": "candidate_id"
              }
            }
          },
          {
            "in": "query",
            "name": "created_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created after this datetime."
          },
          {
            "in": "query",
            "name": "created_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created before this datetime."
          },
          {
            "in": "query",
            "name": "credited_to_id",
            "schema": {
              "type": "string"
            },
            "description": "If provided, will only return applications credited to this user.",
            "examples": {
              "CreditedToId": {
                "summary": "credited_to_id"
              }
            }
          },
          {
            "in": "query",
            "name": "current_stage_id",
            "schema": {
              "type": "string"
            },
            "description": "If provided, will only return applications at this interview stage.",
            "examples": {
              "CurrentStageId": {
                "summary": "current_stage_id"
              }
            }
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "description": "The pagination cursor value.",
            "examples": {
              "CursorExample": {
                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                "summary": "Cursor Example"
              }
            }
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "type": "string",
              "enum": [
                "candidate",
                "candidate,credited_to",
                "candidate,credited_to,current_stage",
                "candidate,credited_to,current_stage,reject_reason",
                "candidate,credited_to,reject_reason",
                "candidate,current_stage",
                "candidate,current_stage,reject_reason",
                "candidate,job",
                "candidate,job,credited_to",
                "candidate,job,credited_to,current_stage",
                "candidate,job,credited_to,current_stage,reject_reason",
                "candidate,job,credited_to,reject_reason",
                "candidate,job,current_stage",
                "candidate,job,current_stage,reject_reason",
                "candidate,job,reject_reason",
                "candidate,reject_reason",
                "credited_to",
                "credited_to,current_stage",
                "credited_to,current_stage,reject_reason",
                "credited_to,reject_reason",
                "current_stage",
                "current_stage,reject_reason",
                "job",
                "job,credited_to",
                "job,credited_to,current_stage",
                "job,credited_to,current_stage,reject_reason",
                "job,credited_to,reject_reason",
                "job,current_stage",
                "job,current_stage,reject_reason",
                "job,reject_reason",
                "reject_reason"
              ]
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
            "examples": {
              "ExpandCandidate,Job,CreditedTo,CurrentStage,RejectReason": {
                "value": "candidate,job,credited_to,current_stage,reject_reason",
                "summary": "Expand Candidate, Job, Credited_to, Current_stage, Reject_reason"
              }
            }
          },
          {
            "in": "query",
            "name": "include_deleted_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include data that was deleted in the third-party service."
          },
          {
            "in": "query",
            "name": "include_remote_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
          },
          {
            "in": "query",
            "name": "job_id",
            "schema": {
              "type": "string"
            },
            "description": "If provided, will only return applications for this job.",
            "examples": {
              "JobId": {
                "summary": "job_id"
              }
            }
          },
          {
            "in": "query",
            "name": "modified_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified after this datetime."
          },
          {
            "in": "query",
            "name": "modified_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified before this datetime."
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "reject_reason_id",
            "schema": {
              "type": "string"
            },
            "description": "If provided, will only return applications with this reject reason.",
            "examples": {
              "RejectReasonId": {
                "summary": "reject_reason_id"
              }
            }
          },
          {
            "in": "query",
            "name": "remote_id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "description": "The API provider's ID for the given object."
          }
        ],
        "tags": ["applications"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedApplicationList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "applications_create",
        "description": "Creates an `Application` object with the given values.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "is_debug_mode",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include debug fields (such as log file links) in the response."
          },
          {
            "in": "query",
            "name": "run_async",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether or not third-party updates should be run asynchronously."
          }
        ],
        "tags": ["applications"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationEndpointRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationEndpointRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationEndpointRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/applications/{id}": {
      "get": {
        "operationId": "applications_retrieve",
        "description": "Returns an `Application` object with the given `id`.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "type": "string",
              "enum": [
                "candidate",
                "candidate,credited_to",
                "candidate,credited_to,current_stage",
                "candidate,credited_to,current_stage,reject_reason",
                "candidate,credited_to,reject_reason",
                "candidate,current_stage",
                "candidate,current_stage,reject_reason",
                "candidate,job",
                "candidate,job,credited_to",
                "candidate,job,credited_to,current_stage",
                "candidate,job,credited_to,current_stage,reject_reason",
                "candidate,job,credited_to,reject_reason",
                "candidate,job,current_stage",
                "candidate,job,current_stage,reject_reason",
                "candidate,job,reject_reason",
                "candidate,reject_reason",
                "credited_to",
                "credited_to,current_stage",
                "credited_to,current_stage,reject_reason",
                "credited_to,reject_reason",
                "current_stage",
                "current_stage,reject_reason",
                "job",
                "job,credited_to",
                "job,credited_to,current_stage",
                "job,credited_to,current_stage,reject_reason",
                "job,credited_to,reject_reason",
                "job,current_stage",
                "job,current_stage,reject_reason",
                "job,reject_reason",
                "reject_reason"
              ]
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
            "examples": {
              "ExpandCandidate,Job,CreditedTo,CurrentStage,RejectReason": {
                "value": "candidate,job,credited_to,current_stage,reject_reason",
                "summary": "Expand Candidate, Job, Credited_to, Current_stage, Reject_reason"
              }
            }
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "include_remote_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
          }
        ],
        "tags": ["applications"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/applications/meta/post": {
      "get": {
        "operationId": "applications_meta_post_retrieve",
        "description": "Returns metadata for `Application` POSTs.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "application_remote_template_id",
            "schema": {
              "type": "string"
            },
            "description": "The template ID associated with the nested application in the request."
          }
        ],
        "tags": ["applications"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetaResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/attachments": {
      "get": {
        "operationId": "attachments_list",
        "description": "Returns a list of `Attachment` objects.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "candidate_id",
            "schema": {
              "type": "string"
            },
            "description": "If provided, will only return attachments for this candidate.",
            "examples": {
              "CandidateId": {
                "summary": "candidate_id"
              }
            }
          },
          {
            "in": "query",
            "name": "created_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created after this datetime."
          },
          {
            "in": "query",
            "name": "created_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created before this datetime."
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "description": "The pagination cursor value.",
            "examples": {
              "CursorExample": {
                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                "summary": "Cursor Example"
              }
            }
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "type": "string",
              "enum": ["candidate"]
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
            "examples": {
              "ExpandCandidate": {
                "value": "candidate",
                "summary": "Expand Candidate"
              }
            }
          },
          {
            "in": "query",
            "name": "include_deleted_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include data that was deleted in the third-party service."
          },
          {
            "in": "query",
            "name": "include_remote_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
          },
          {
            "in": "query",
            "name": "modified_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified after this datetime."
          },
          {
            "in": "query",
            "name": "modified_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified before this datetime."
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "remote_id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "description": "The API provider's ID for the given object."
          }
        ],
        "tags": ["attachments"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAttachmentList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "attachments_create",
        "description": "Creates an `Attachment` object with the given values.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "is_debug_mode",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include debug fields (such as log file links) in the response."
          },
          {
            "in": "query",
            "name": "run_async",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether or not third-party updates should be run asynchronously."
          }
        ],
        "tags": ["attachments"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentEndpointRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentEndpointRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentEndpointRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/attachments/{id}": {
      "get": {
        "operationId": "attachments_retrieve",
        "description": "Returns an `Attachment` object with the given `id`.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "type": "string",
              "enum": ["candidate"]
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
            "examples": {
              "ExpandCandidate": {
                "value": "candidate",
                "summary": "Expand Candidate"
              }
            }
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "include_remote_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
          }
        ],
        "tags": ["attachments"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/attachments/meta/post": {
      "get": {
        "operationId": "attachments_meta_post_retrieve",
        "description": "Returns metadata for `Attachment` POSTs.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          }
        ],
        "tags": ["attachments"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetaResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/available-actions": {
      "get": {
        "operationId": "available_actions_retrieve",
        "description": "Returns a list of models and actions available for an account.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          }
        ],
        "tags": ["available-actions"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailableActions"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/candidates": {
      "get": {
        "operationId": "candidates_list",
        "description": "Returns a list of `Candidate` objects.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "created_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created after this datetime."
          },
          {
            "in": "query",
            "name": "created_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created before this datetime."
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "description": "The pagination cursor value.",
            "examples": {
              "CursorExample": {
                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                "summary": "Cursor Example"
              }
            }
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "type": "string",
              "enum": [
                "applications",
                "applications,attachments",
                "attachments"
              ]
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
            "examples": {
              "ExpandApplications,Attachments": {
                "value": "applications,attachments",
                "summary": "Expand Applications, Attachments"
              }
            }
          },
          {
            "in": "query",
            "name": "first_name",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "description": "If provided, will only return candidates with this first name."
          },
          {
            "in": "query",
            "name": "include_deleted_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include data that was deleted in the third-party service."
          },
          {
            "in": "query",
            "name": "include_remote_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
          },
          {
            "in": "query",
            "name": "last_name",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "description": "If provided, will only return candidates with this last name."
          },
          {
            "in": "query",
            "name": "modified_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified after this datetime."
          },
          {
            "in": "query",
            "name": "modified_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified before this datetime."
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "remote_id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "description": "The API provider's ID for the given object."
          }
        ],
        "tags": ["candidates"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedCandidateList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "candidates_create",
        "description": "Creates a `Candidate` object with the given values.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "is_debug_mode",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include debug fields (such as log file links) in the response."
          },
          {
            "in": "query",
            "name": "run_async",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether or not third-party updates should be run asynchronously."
          }
        ],
        "tags": ["candidates"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CandidateEndpointRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CandidateEndpointRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CandidateEndpointRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CandidateResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/candidates/{id}": {
      "get": {
        "operationId": "candidates_retrieve",
        "description": "Returns a `Candidate` object with the given `id`.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "type": "string",
              "enum": [
                "applications",
                "applications,attachments",
                "attachments"
              ]
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
            "examples": {
              "ExpandApplications,Attachments": {
                "value": "applications,attachments",
                "summary": "Expand Applications, Attachments"
              }
            }
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "include_remote_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
          }
        ],
        "tags": ["candidates"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Candidate"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/candidates/ignore/{model_id}": {
      "post": {
        "operationId": "candidates_ignore_create",
        "description": "Ignores a specific row based on the `model_id` in the url. These records will have their properties set to null, and will not be updated in future syncs. The \"reason\" and \"message\" fields in the request body will be stored for audit purposes.",
        "parameters": [
          {
            "in": "path",
            "name": "model_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": ["candidates"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IgnoreCommonModelRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/IgnoreCommonModelRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IgnoreCommonModelRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IgnoreCommonModel"
                }
              }
            },
            "description": ""
          }
        },
        "x-extra-tags": ["ignore-model"]
      }
    },
    "/candidates/meta/post": {
      "get": {
        "operationId": "candidates_meta_post_retrieve",
        "description": "Returns metadata for `Candidate` POSTs.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          }
        ],
        "tags": ["candidates"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetaResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/delete-account": {
      "post": {
        "operationId": "delete_account_create",
        "description": "Delete a linked account.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          }
        ],
        "tags": ["delete-account"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/departments": {
      "get": {
        "operationId": "departments_list",
        "description": "Returns a list of `Department` objects.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "created_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created after this datetime."
          },
          {
            "in": "query",
            "name": "created_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created before this datetime."
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "description": "The pagination cursor value.",
            "examples": {
              "CursorExample": {
                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                "summary": "Cursor Example"
              }
            }
          },
          {
            "in": "query",
            "name": "include_deleted_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include data that was deleted in the third-party service."
          },
          {
            "in": "query",
            "name": "include_remote_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
          },
          {
            "in": "query",
            "name": "modified_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified after this datetime."
          },
          {
            "in": "query",
            "name": "modified_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified before this datetime."
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "remote_id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "description": "The API provider's ID for the given object."
          }
        ],
        "tags": ["departments"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDepartmentList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/departments/{id}": {
      "get": {
        "operationId": "departments_retrieve",
        "description": "Returns a `Department` object with the given `id`.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "include_remote_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
          }
        ],
        "tags": ["departments"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/eeocs": {
      "get": {
        "operationId": "eeocs_list",
        "description": "Returns a list of `EEOC` objects.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "candidate_id",
            "schema": {
              "type": "string"
            },
            "description": "If provided, will only return EEOC info for this candidate.",
            "examples": {
              "CandidateId": {
                "summary": "candidate_id"
              }
            }
          },
          {
            "in": "query",
            "name": "created_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created after this datetime."
          },
          {
            "in": "query",
            "name": "created_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created before this datetime."
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "description": "The pagination cursor value.",
            "examples": {
              "CursorExample": {
                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                "summary": "Cursor Example"
              }
            }
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "type": "string",
              "enum": ["candidate"]
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
            "examples": {
              "ExpandCandidate": {
                "value": "candidate",
                "summary": "Expand Candidate"
              }
            }
          },
          {
            "in": "query",
            "name": "include_deleted_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include data that was deleted in the third-party service."
          },
          {
            "in": "query",
            "name": "include_remote_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
          },
          {
            "in": "query",
            "name": "modified_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified after this datetime."
          },
          {
            "in": "query",
            "name": "modified_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified before this datetime."
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "remote_id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "description": "The API provider's ID for the given object."
          }
        ],
        "tags": ["eeocs"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedEEOCList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/eeocs/{id}": {
      "get": {
        "operationId": "eeocs_retrieve",
        "description": "Returns an `EEOC` object with the given `id`.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "type": "string",
              "enum": ["candidate"]
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
            "examples": {
              "ExpandCandidate": {
                "value": "candidate",
                "summary": "Expand Candidate"
              }
            }
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "include_remote_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
          }
        ],
        "tags": ["eeocs"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EEOC"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/generate-key": {
      "post": {
        "operationId": "generate_key_create",
        "description": "Create a remote key.",
        "tags": ["generate-key"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateRemoteKeyRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/GenerateRemoteKeyRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/GenerateRemoteKeyRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteKey"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/interviews": {
      "get": {
        "operationId": "interviews_list",
        "description": "Returns a list of `ScheduledInterview` objects.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "application_id",
            "schema": {
              "type": "string"
            },
            "description": "If provided, will only return interviews for this application.",
            "examples": {
              "ApplicationId": {
                "summary": "application_id"
              }
            }
          },
          {
            "in": "query",
            "name": "created_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created after this datetime."
          },
          {
            "in": "query",
            "name": "created_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created before this datetime."
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "description": "The pagination cursor value.",
            "examples": {
              "CursorExample": {
                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                "summary": "Cursor Example"
              }
            }
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "type": "string",
              "enum": [
                "application",
                "application,job_interview_stage",
                "interviewers",
                "interviewers,application",
                "interviewers,application,job_interview_stage",
                "interviewers,job_interview_stage",
                "interviewers,organizer",
                "interviewers,organizer,application",
                "interviewers,organizer,application,job_interview_stage",
                "interviewers,organizer,job_interview_stage",
                "job_interview_stage",
                "organizer",
                "organizer,application",
                "organizer,application,job_interview_stage",
                "organizer,job_interview_stage"
              ]
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
            "examples": {
              "ExpandInterviewers,Organizer,Application,JobInterviewStage": {
                "value": "interviewers,organizer,application,job_interview_stage",
                "summary": "Expand Interviewers, Organizer, Application, Job_interview_stage"
              }
            }
          },
          {
            "in": "query",
            "name": "include_deleted_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include data that was deleted in the third-party service."
          },
          {
            "in": "query",
            "name": "include_remote_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
          },
          {
            "in": "query",
            "name": "job_interview_stage_id",
            "schema": {
              "type": "string"
            },
            "description": "If provided, will only return interviews at this stage.",
            "examples": {
              "JobInterviewStageId": {
                "summary": "job_interview_stage_id"
              }
            }
          },
          {
            "in": "query",
            "name": "modified_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified after this datetime."
          },
          {
            "in": "query",
            "name": "modified_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified before this datetime."
          },
          {
            "in": "query",
            "name": "organizer_id",
            "schema": {
              "type": "string"
            },
            "description": "If provided, will only return interviews organized by this user.",
            "examples": {
              "OrganizerId": {
                "summary": "organizer_id"
              }
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "remote_id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "description": "The API provider's ID for the given object."
          }
        ],
        "tags": ["interviews"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedScheduledInterviewList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/interviews/{id}": {
      "get": {
        "operationId": "interviews_retrieve",
        "description": "Returns a `ScheduledInterview` object with the given `id`.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "type": "string",
              "enum": [
                "application",
                "application,job_interview_stage",
                "interviewers",
                "interviewers,application",
                "interviewers,application,job_interview_stage",
                "interviewers,job_interview_stage",
                "interviewers,organizer",
                "interviewers,organizer,application",
                "interviewers,organizer,application,job_interview_stage",
                "interviewers,organizer,job_interview_stage",
                "job_interview_stage",
                "organizer",
                "organizer,application",
                "organizer,application,job_interview_stage",
                "organizer,job_interview_stage"
              ]
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
            "examples": {
              "ExpandInterviewers,Organizer,Application,JobInterviewStage": {
                "value": "interviewers,organizer,application,job_interview_stage",
                "summary": "Expand Interviewers, Organizer, Application, Job_interview_stage"
              }
            }
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "include_remote_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
          }
        ],
        "tags": ["interviews"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledInterview"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/issues": {
      "get": {
        "operationId": "issues_list",
        "description": "Gets issues.",
        "parameters": [
          {
            "in": "query",
            "name": "account_token",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "description": "The pagination cursor value.",
            "examples": {
              "CursorExample": {
                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                "summary": "Cursor Example"
              }
            }
          },
          {
            "in": "query",
            "name": "end_date",
            "schema": {
              "type": "string"
            },
            "description": "If included, will only include issues whose most recent action occurred before this time"
          },
          {
            "in": "query",
            "name": "end_user_organization_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "include_muted",
            "schema": {
              "type": "string"
            },
            "description": "If True, will include muted issues"
          },
          {
            "in": "query",
            "name": "integration_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "start_date",
            "schema": {
              "type": "string"
            },
            "description": "If included, will only include issues whose most recent action occurred after this time"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": ["ONGOING", "RESOLVED"]
            }
          }
        ],
        "tags": ["issues"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedIssueList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/issues/{id}": {
      "get": {
        "operationId": "issues_retrieve",
        "description": "Get a specific issue.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": ["issues"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Issue"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/job-interview-stages": {
      "get": {
        "operationId": "job_interview_stages_list",
        "description": "Returns a list of `JobInterviewStage` objects.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "created_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created after this datetime."
          },
          {
            "in": "query",
            "name": "created_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created before this datetime."
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "description": "The pagination cursor value.",
            "examples": {
              "CursorExample": {
                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                "summary": "Cursor Example"
              }
            }
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "type": "string",
              "enum": ["job"]
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
            "examples": {
              "ExpandJob": {
                "value": "job",
                "summary": "Expand Job"
              }
            }
          },
          {
            "in": "query",
            "name": "include_deleted_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include data that was deleted in the third-party service."
          },
          {
            "in": "query",
            "name": "include_remote_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
          },
          {
            "in": "query",
            "name": "job_id",
            "schema": {
              "type": "string"
            },
            "description": "If provided, will only return interview stages for this job.",
            "examples": {
              "JobId": {
                "summary": "job_id"
              }
            }
          },
          {
            "in": "query",
            "name": "modified_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified after this datetime."
          },
          {
            "in": "query",
            "name": "modified_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified before this datetime."
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "remote_id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "description": "The API provider's ID for the given object."
          }
        ],
        "tags": ["job-interview-stages"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedJobInterviewStageList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/job-interview-stages/{id}": {
      "get": {
        "operationId": "job_interview_stages_retrieve",
        "description": "Returns a `JobInterviewStage` object with the given `id`.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "type": "string",
              "enum": ["job"]
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
            "examples": {
              "ExpandJob": {
                "value": "job",
                "summary": "Expand Job"
              }
            }
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "include_remote_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
          }
        ],
        "tags": ["job-interview-stages"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobInterviewStage"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/jobs": {
      "get": {
        "operationId": "jobs_list",
        "description": "Returns a list of `Job` objects.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "code",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "description": "If provided, will only return jobs with this code."
          },
          {
            "in": "query",
            "name": "created_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created after this datetime."
          },
          {
            "in": "query",
            "name": "created_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created before this datetime."
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "description": "The pagination cursor value.",
            "examples": {
              "CursorExample": {
                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                "summary": "Cursor Example"
              }
            }
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "type": "string",
              "enum": [
                "departments",
                "departments,hiring_managers",
                "departments,offices",
                "departments,offices,hiring_managers",
                "hiring_managers",
                "offices",
                "offices,hiring_managers"
              ]
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
            "examples": {
              "ExpandDepartments,Offices,HiringManagers": {
                "value": "departments,offices,hiring_managers",
                "summary": "Expand Departments, Offices, Hiring_managers"
              }
            }
          },
          {
            "in": "query",
            "name": "include_deleted_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include data that was deleted in the third-party service."
          },
          {
            "in": "query",
            "name": "include_remote_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
          },
          {
            "in": "query",
            "name": "modified_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified after this datetime."
          },
          {
            "in": "query",
            "name": "modified_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified before this datetime."
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "remote_id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "description": "The API provider's ID for the given object."
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "nullable": true,
              "enum": ["ARCHIVED", "CLOSED", "DRAFT", "OPEN", "PENDING"]
            },
            "description": "If provided, will only return jobs with this status. Options: ('OPEN', 'CLOSED', 'DRAFT', 'ARCHIVED', 'PENDING')"
          }
        ],
        "tags": ["jobs"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedJobList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/jobs/{id}": {
      "get": {
        "operationId": "jobs_retrieve",
        "description": "Returns a `Job` object with the given `id`.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "type": "string",
              "enum": [
                "departments",
                "departments,hiring_managers",
                "departments,offices",
                "departments,offices,hiring_managers",
                "hiring_managers",
                "offices",
                "offices,hiring_managers"
              ]
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
            "examples": {
              "ExpandDepartments,Offices,HiringManagers": {
                "value": "departments,offices,hiring_managers",
                "summary": "Expand Departments, Offices, Hiring_managers"
              }
            }
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "include_remote_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
          }
        ],
        "tags": ["jobs"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/link-token": {
      "post": {
        "operationId": "link_token_create",
        "description": "Creates a link token to be used when linking a new end user.",
        "tags": ["link-token"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndUserDetailsRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/EndUserDetailsRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/EndUserDetailsRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkToken"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/linked-accounts": {
      "get": {
        "operationId": "linked_accounts_list",
        "description": "List linked accounts for your organization.",
        "parameters": [
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string",
              "nullable": true,
              "enum": ["accounting", "ats", "hris", "ticketing"]
            }
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "description": "The pagination cursor value.",
            "examples": {
              "CursorExample": {
                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                "summary": "Cursor Example"
              }
            }
          },
          {
            "in": "query",
            "name": "end_user_email_address",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "end_user_organization_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "end_user_origin_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "end_user_origin_ids",
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of EndUser origin IDs, making it possible to specify multiple EndUsers at once"
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "query",
            "name": "ids",
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of LinkedAccount IDs, making it possible to specify multiple LinkedAccounts at once"
          },
          {
            "in": "query",
            "name": "integration_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "is_test_account",
            "schema": {
              "type": "string"
            },
            "description": "If included, will only include test linked accounts. If not included, will only include non-test linked accounts"
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            },
            "description": "Filter by status. Options: `COMPLETE`, `INCOMPLETE`, `RELINK_NEEDED`"
          }
        ],
        "tags": ["linked-accounts"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAccountDetailsAndActionsList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/offers": {
      "get": {
        "operationId": "offers_list",
        "description": "Returns a list of `Offer` objects.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "application_id",
            "schema": {
              "type": "string"
            },
            "description": "If provided, will only return offers for this application.",
            "examples": {
              "ApplicationId": {
                "summary": "application_id"
              }
            }
          },
          {
            "in": "query",
            "name": "created_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created after this datetime."
          },
          {
            "in": "query",
            "name": "created_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created before this datetime."
          },
          {
            "in": "query",
            "name": "creator_id",
            "schema": {
              "type": "string"
            },
            "description": "If provided, will only return offers created by this user.",
            "examples": {
              "CreatorId": {
                "summary": "creator_id"
              }
            }
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "description": "The pagination cursor value.",
            "examples": {
              "CursorExample": {
                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                "summary": "Cursor Example"
              }
            }
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "type": "string",
              "enum": ["application", "application,creator", "creator"]
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
            "examples": {
              "ExpandApplication,Creator": {
                "value": "application,creator",
                "summary": "Expand Application, Creator"
              }
            }
          },
          {
            "in": "query",
            "name": "include_deleted_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include data that was deleted in the third-party service."
          },
          {
            "in": "query",
            "name": "include_remote_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
          },
          {
            "in": "query",
            "name": "modified_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified after this datetime."
          },
          {
            "in": "query",
            "name": "modified_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified before this datetime."
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "remote_id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "description": "The API provider's ID for the given object."
          }
        ],
        "tags": ["offers"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedOfferList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/offers/{id}": {
      "get": {
        "operationId": "offers_retrieve",
        "description": "Returns an `Offer` object with the given `id`.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "type": "string",
              "enum": ["application", "application,creator", "creator"]
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
            "examples": {
              "ExpandApplication,Creator": {
                "value": "application,creator",
                "summary": "Expand Application, Creator"
              }
            }
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "include_remote_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
          }
        ],
        "tags": ["offers"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Offer"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/offices": {
      "get": {
        "operationId": "offices_list",
        "description": "Returns a list of `Office` objects.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "created_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created after this datetime."
          },
          {
            "in": "query",
            "name": "created_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created before this datetime."
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "description": "The pagination cursor value.",
            "examples": {
              "CursorExample": {
                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                "summary": "Cursor Example"
              }
            }
          },
          {
            "in": "query",
            "name": "include_deleted_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include data that was deleted in the third-party service."
          },
          {
            "in": "query",
            "name": "include_remote_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
          },
          {
            "in": "query",
            "name": "modified_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified after this datetime."
          },
          {
            "in": "query",
            "name": "modified_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified before this datetime."
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "remote_id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "description": "The API provider's ID for the given object."
          }
        ],
        "tags": ["offices"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedOfficeList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/offices/{id}": {
      "get": {
        "operationId": "offices_retrieve",
        "description": "Returns an `Office` object with the given `id`.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "include_remote_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
          }
        ],
        "tags": ["offices"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Office"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/passthrough": {
      "post": {
        "operationId": "passthrough_create",
        "description": "Pull data from an endpoint not currently supported by Merge.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          }
        ],
        "tags": ["passthrough"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataPassthroughRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DataPassthroughRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/DataPassthroughRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/regenerate-key": {
      "post": {
        "operationId": "regenerate_key_create",
        "description": "Exchange remote keys.",
        "tags": ["regenerate-key"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoteKeyForRegenerationRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RemoteKeyForRegenerationRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RemoteKeyForRegenerationRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteKey"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/reject-reasons": {
      "get": {
        "operationId": "reject_reasons_list",
        "description": "Returns a list of `RejectReason` objects.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "created_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created after this datetime."
          },
          {
            "in": "query",
            "name": "created_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created before this datetime."
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "description": "The pagination cursor value.",
            "examples": {
              "CursorExample": {
                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                "summary": "Cursor Example"
              }
            }
          },
          {
            "in": "query",
            "name": "include_deleted_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include data that was deleted in the third-party service."
          },
          {
            "in": "query",
            "name": "include_remote_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
          },
          {
            "in": "query",
            "name": "modified_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified after this datetime."
          },
          {
            "in": "query",
            "name": "modified_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified before this datetime."
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "remote_id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "description": "The API provider's ID for the given object."
          }
        ],
        "tags": ["reject-reasons"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedRejectReasonList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/reject-reasons/{id}": {
      "get": {
        "operationId": "reject_reasons_retrieve",
        "description": "Returns a `RejectReason` object with the given `id`.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "include_remote_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
          }
        ],
        "tags": ["reject-reasons"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RejectReason"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/scorecards": {
      "get": {
        "operationId": "scorecards_list",
        "description": "Returns a list of `Scorecard` objects.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "application_id",
            "schema": {
              "type": "string"
            },
            "description": "If provided, will only return scorecards for this application.",
            "examples": {
              "ApplicationId": {
                "summary": "application_id"
              }
            }
          },
          {
            "in": "query",
            "name": "created_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created after this datetime."
          },
          {
            "in": "query",
            "name": "created_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created before this datetime."
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "description": "The pagination cursor value.",
            "examples": {
              "CursorExample": {
                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                "summary": "Cursor Example"
              }
            }
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "type": "string",
              "enum": [
                "application",
                "application,interview",
                "application,interview,interviewer",
                "application,interviewer",
                "interview",
                "interview,interviewer",
                "interviewer"
              ]
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
            "examples": {
              "ExpandApplication,Interview,Interviewer": {
                "value": "application,interview,interviewer",
                "summary": "Expand Application, Interview, Interviewer"
              }
            }
          },
          {
            "in": "query",
            "name": "include_deleted_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include data that was deleted in the third-party service."
          },
          {
            "in": "query",
            "name": "include_remote_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
          },
          {
            "in": "query",
            "name": "interview_id",
            "schema": {
              "type": "string"
            },
            "description": "If provided, will only return scorecards for this interview.",
            "examples": {
              "InterviewId": {
                "summary": "interview_id"
              }
            }
          },
          {
            "in": "query",
            "name": "interviewer_id",
            "schema": {
              "type": "string"
            },
            "description": "If provided, will only return scorecards for this interviewer.",
            "examples": {
              "InterviewerId": {
                "summary": "interviewer_id"
              }
            }
          },
          {
            "in": "query",
            "name": "modified_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified after this datetime."
          },
          {
            "in": "query",
            "name": "modified_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified before this datetime."
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "remote_id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "description": "The API provider's ID for the given object."
          }
        ],
        "tags": ["scorecards"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedScorecardList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/scorecards/{id}": {
      "get": {
        "operationId": "scorecards_retrieve",
        "description": "Returns a `Scorecard` object with the given `id`.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "type": "string",
              "enum": [
                "application",
                "application,interview",
                "application,interview,interviewer",
                "application,interviewer",
                "interview",
                "interview,interviewer",
                "interviewer"
              ]
            },
            "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
            "examples": {
              "ExpandApplication,Interview,Interviewer": {
                "value": "application,interview,interviewer",
                "summary": "Expand Application, Interview, Interviewer"
              }
            }
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "include_remote_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
          }
        ],
        "tags": ["scorecards"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Scorecard"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/sync-status": {
      "get": {
        "operationId": "sync_status_list",
        "description": "Get syncing status. Possible values: `DISABLED`, `DONE`, `FAILED`, `SYNCING`",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "description": "The pagination cursor value.",
            "examples": {
              "CursorExample": {
                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                "summary": "Cursor Example"
              }
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["sync-status"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedSyncStatusList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/sync-status/resync": {
      "post": {
        "operationId": "sync_status_resync_create",
        "description": "Force re-sync of all models. This is only available for organizations on Merge's Grow and Expand plans.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          }
        ],
        "tags": ["force-resync"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyncStatus"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/tags": {
      "get": {
        "operationId": "tags_list",
        "description": "Returns a list of `Tag` objects.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "created_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created after this datetime."
          },
          {
            "in": "query",
            "name": "created_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created before this datetime."
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "description": "The pagination cursor value.",
            "examples": {
              "CursorExample": {
                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                "summary": "Cursor Example"
              }
            }
          },
          {
            "in": "query",
            "name": "include_deleted_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include data that was deleted in the third-party service."
          },
          {
            "in": "query",
            "name": "include_remote_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
          },
          {
            "in": "query",
            "name": "modified_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified after this datetime."
          },
          {
            "in": "query",
            "name": "modified_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified before this datetime."
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "remote_id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "description": "The API provider's ID for the given object."
          }
        ],
        "tags": ["tags"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTagList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/users": {
      "get": {
        "operationId": "users_list",
        "description": "Returns a list of `RemoteUser` objects.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "query",
            "name": "created_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created after this datetime."
          },
          {
            "in": "query",
            "name": "created_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects created before this datetime."
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "description": "The pagination cursor value.",
            "examples": {
              "CursorExample": {
                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                "summary": "Cursor Example"
              }
            }
          },
          {
            "in": "query",
            "name": "email",
            "schema": {
              "type": "string",
              "format": "email",
              "nullable": true
            },
            "description": "If provided, will only return remote users with the given email address"
          },
          {
            "in": "query",
            "name": "include_deleted_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include data that was deleted in the third-party service."
          },
          {
            "in": "query",
            "name": "include_remote_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
          },
          {
            "in": "query",
            "name": "modified_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified after this datetime."
          },
          {
            "in": "query",
            "name": "modified_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "If provided, will only return objects modified before this datetime."
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "remote_id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "description": "The API provider's ID for the given object."
          }
        ],
        "tags": ["users"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedRemoteUserList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "users_retrieve",
        "description": "Returns a `RemoteUser` object with the given `id`.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Account-Token",
            "schema": {
              "type": "string"
            },
            "description": "Token identifying the end user.",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "include_remote_data",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
          }
        ],
        "tags": ["users"],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteUser"
                }
              }
            },
            "description": ""
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessRoleEnum": {
        "enum": [
          "SUPER_ADMIN",
          "ADMIN",
          "TEAM_MEMBER",
          "LIMITED_TEAM_MEMBER",
          "INTERVIEWER"
        ],
        "type": "string"
      },
      "AccountDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "0496d4c2-42e6-4072-80b3-7b69bfdc76fd"
          },
          "integration": {
            "type": "string",
            "readOnly": true,
            "example": "BambooHR"
          },
          "integration_slug": {
            "type": "string",
            "readOnly": true,
            "example": "bamboohr"
          },
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CategoryEnum"
              }
            ],
            "nullable": true,
            "example": "hris"
          },
          "end_user_origin_id": {
            "type": "string",
            "readOnly": true,
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          },
          "end_user_organization_name": {
            "type": "string",
            "readOnly": true,
            "example": "Waystar Royco"
          },
          "end_user_email_address": {
            "type": "string",
            "readOnly": true,
            "example": "kendall.roy@waystar-royco.com"
          },
          "status": {
            "type": "string",
            "readOnly": true,
            "example": "COMPLETE"
          }
        }
      },
      "AccountDetailsAndActions": {
        "type": "object",
        "description": "# The LinkedAccount Object\n### Description\nThe `LinkedAccount` object is used to represent an end user's link with a specific integration.\n\n### Usage Example\nView a list of your organization's `LinkedAccount` objects.",
        "properties": {
          "id": {
            "type": "string",
            "example": "e59b1821-f85c-4e28-a6b3-1804156f3563"
          },
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CategoryEnum"
              }
            ],
            "example": "hris"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountDetailsAndActionsStatusEnum"
              }
            ],
            "example": "COMPLETE"
          },
          "status_detail": {
            "type": "string"
          },
          "end_user_origin_id": {
            "type": "string",
            "example": "3ac95cde-6c7f-4eef-afec-be710b42308d"
          },
          "end_user_organization_name": {
            "type": "string",
            "example": "Foo Bar, LLC"
          },
          "end_user_email_address": {
            "type": "string",
            "example": "hradmin@foobar.dev"
          },
          "integration": {
            "$ref": "#/components/schemas/AccountDetailsAndActionsIntegration",
            "example": {
              "name": "SAP SuccessFactors",
              "categories": ["hris", "ats"],
              "image": "https://cdn.merge.dev/SuccessFactors_Logo.png",
              "square_image": "https://cdn.merge.dev/SuccessFactors_Square_Logo.jpg",
              "color": "#F6A704",
              "slug": "sap-successfactors",
              "passthrough_available": true,
              "available_model_operations": [
                {
                  "model_name": "Candidate",
                  "available_operations": ["FETCH", "CREATE"],
                  "required_post_parameters": ["remote_user_id"],
                  "supported_fields": [
                    "first_name",
                    "last_name",
                    "company",
                    "title"
                  ]
                }
              ]
            }
          }
        },
        "required": [
          "end_user_email_address",
          "end_user_organization_name",
          "id",
          "status"
        ],
        "x-merge-sample-json": "{\"id\": \"e59b1821-f85c-4e28-a6b3-1804156f3563\", \"category\": \"hris\", \"status\": \"COMPLETE\", \"status_detail\": null, \"end_user_origin_id\": \"3ac95cde-6c7f-4eef-afec-be710b42308d\", \"end_user_organization_name\": \"Foo Bar, LLC\", \"end_user_email_address\": \"hradmin@foobar.dev\", \"integration\": {\"name\": \"SAP SuccessFactors\", \"categories\": [\"hris\", \"ats\"], \"image\": \"https://cdn.merge.dev/SuccessFactors_Logo.png\", \"square_image\": \"https://cdn.merge.dev/SuccessFactors_Square_Logo.jpg\", \"color\": \"#F6A704\", \"slug\": \"sap-successfactors\", \"passthrough_available\": true, \"available_model_operations\": [{\"model_name\": \"Candidate\", \"available_operations\": [\"FETCH\", \"CREATE\"], \"required_post_parameters\": [\"remote_user_id\"], \"supported_fields\": [\"first_name\", \"last_name\", \"company\", \"title\"]}]}}"
      },
      "AccountDetailsAndActionsIntegration": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoriesEnum"
            }
          },
          "image": {
            "type": "string"
          },
          "square_image": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "passthrough_available": {
            "type": "boolean"
          },
          "available_model_operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModelOperation"
            }
          }
        },
        "required": [
          "categories",
          "color",
          "name",
          "passthrough_available",
          "slug"
        ]
      },
      "AccountDetailsAndActionsStatusEnum": {
        "enum": ["COMPLETE", "INCOMPLETE", "RELINK_NEEDED"],
        "type": "string"
      },
      "AccountIntegration": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Company name."
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoriesEnum"
            },
            "description": "Category or categories this integration belongs to. Multiple categories should be comma separated.<br/><br>Example: For [ats, hris], enter <i>ats,hris</i>"
          },
          "image": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "Company logo in rectangular shape. <b>Upload an image with a clear background.</b>"
          },
          "square_image": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "Company logo in square shape. <b>Upload an image with a white background.</b>"
          },
          "color": {
            "type": "string",
            "description": "The color of this integration used for buttons and text throughout the app and landing pages. <b>Choose a darker, saturated color.</b>",
            "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
            "maxLength": 18
          },
          "slug": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": ["name"]
      },
      "AccountToken": {
        "type": "object",
        "properties": {
          "account_token": {
            "type": "string",
            "example": "T9klMDQrcHdm9jrtHuOS2Nf06BIHwMNjpPXPMB"
          },
          "integration": {
            "$ref": "#/components/schemas/AccountIntegration",
            "example": {
              "name": "SAP SuccessFactors",
              "categories": ["hris", "ats"],
              "image": "https://cdn.merge.dev/SuccessFactors_Logo.png",
              "square_image": "https://cdn.merge.dev/SuccessFactors_Square_Logo.jpg",
              "color": "#F6A704",
              "slug": "sap-successfactors"
            }
          }
        },
        "required": ["account_token", "integration"]
      },
      "Activity": {
        "type": "object",
        "description": "# The Activity Object\n### Description\nThe `Activity` object is used to represent an activity performed by a user.\n### Usage Example\nFetch from the `LIST Activities` endpoint and filter by `ID` to show all activities.",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "ecbe05ac-62a3-46c5-ab31-4b478b37d1b4"
          },
          "remote_id": {
            "type": "string",
            "nullable": true,
            "description": "The third-party API ID of the matching object.",
            "example": "198123"
          },
          "user": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "9d892439-5fab-4dbb-8bd8-34f7f96c7912"
          },
          "remote_created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the third party's activity was created.",
            "example": "2021-10-15T00:00:00Z"
          },
          "activity_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActivityTypeEnum"
              }
            ],
            "nullable": true,
            "description": "The activity's type.",
            "example": "NOTE"
          },
          "subject": {
            "type": "string",
            "nullable": true,
            "description": "The activity's subject.",
            "example": "Gil Feig's interview"
          },
          "body": {
            "type": "string",
            "nullable": true,
            "description": "The activity's body.",
            "example": "Candidate loves integrations!!."
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VisibilityEnum"
              }
            ],
            "nullable": true,
            "description": "The activity's visibility.",
            "example": "PRIVATE"
          }
        }
      },
      "ActivityTypeEnum": {
        "enum": ["NOTE", "EMAIL", "OTHER"],
        "type": "string"
      },
      "Application": {
        "type": "object",
        "description": "# The Application Object\n### Description\nThe `Application` object is used to represent an Application for a job position.\n### Usage Example\nFetch from the `LIST Applications` endpoint and filter by `ID` to show all applications.",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "92e8a369-fffe-430d-b93a-f7e8a16563f1"
          },
          "remote_id": {
            "type": "string",
            "nullable": true,
            "description": "The third-party API ID of the matching object.",
            "example": "98796"
          },
          "candidate": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "2872ba14-4084-492b-be96-e5eee6fc33ef"
          },
          "job": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "52bf9b5e-0beb-4f6f-8a72-cd4dca7ca633"
          },
          "applied_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the application was submitted.",
            "example": "2021-10-15T00:00:00Z"
          },
          "rejected_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the application was rejected.",
            "example": "2021-11-15T00:00:00Z"
          },
          "source": {
            "type": "string",
            "nullable": true,
            "description": "The application's source.",
            "example": "Campus recruiting event"
          },
          "credited_to": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "58166795-8d68-4b30-9bfb-bfd402479484"
          },
          "current_stage": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "d578dfdc-7b0a-4ab6-a2b0-4b40f20eb9ea"
          },
          "reject_reason": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "59b25f2b-da02-40f5-9656-9fa0db555784"
          },
          "custom_fields": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "Custom fields configured for a given model."
          }
        }
      },
      "ApplicationEndpointRequest": {
        "type": "object",
        "properties": {
          "model": {
            "$ref": "#/components/schemas/ApplicationRequest"
          },
          "remote_user_id": {
            "type": "string"
          }
        },
        "required": ["model", "remote_user_id"]
      },
      "ApplicationRequest": {
        "type": "object",
        "description": "# The Application Object\n### Description\nThe `Application` object is used to represent an Application for a job position.\n### Usage Example\nFetch from the `LIST Applications` endpoint and filter by `ID` to show all applications.",
        "properties": {
          "remote_id": {
            "type": "string",
            "nullable": true,
            "description": "The third-party API ID of the matching object.",
            "example": "98796"
          },
          "candidate": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "2872ba14-4084-492b-be96-e5eee6fc33ef"
          },
          "job": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "52bf9b5e-0beb-4f6f-8a72-cd4dca7ca633"
          },
          "applied_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the application was submitted.",
            "example": "2021-10-15T00:00:00Z"
          },
          "rejected_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the application was rejected.",
            "example": "2021-11-15T00:00:00Z"
          },
          "source": {
            "type": "string",
            "nullable": true,
            "description": "The application's source.",
            "example": "Campus recruiting event"
          },
          "credited_to": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "58166795-8d68-4b30-9bfb-bfd402479484"
          },
          "current_stage": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "d578dfdc-7b0a-4ab6-a2b0-4b40f20eb9ea"
          },
          "reject_reason": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "59b25f2b-da02-40f5-9656-9fa0db555784"
          },
          "custom_fields": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "Custom fields configured for a given model."
          },
          "remote_template_id": {
            "type": "string",
            "writeOnly": true,
            "nullable": true,
            "minLength": 1,
            "example": "92830948203"
          },
          "integration_params": {
            "type": "object",
            "additionalProperties": {},
            "writeOnly": true,
            "nullable": true,
            "example": {
              "unique_integration_field": "unique_integration_field_value"
            }
          },
          "linked_account_params": {
            "type": "object",
            "additionalProperties": {},
            "writeOnly": true,
            "nullable": true,
            "example": {
              "unique_linked_account_field": "unique_linked_account_field_value"
            }
          }
        }
      },
      "ApplicationResponse": {
        "type": "object",
        "properties": {
          "model": {
            "$ref": "#/components/schemas/Application"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WarningValidationProblem"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorValidationProblem"
            }
          },
          "logs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DebugModeLog"
            }
          }
        },
        "required": ["errors", "model", "warnings"]
      },
      "Attachment": {
        "type": "object",
        "description": "# The Attachment Object\n### Description\nThe `Attachment` object is used to represent a attachment for a candidate.\n### Usage Example\nFetch from the `LIST Attachments` endpoint and view attachments accessible by a company.",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "c640b80b-fac9-409f-aa19-1f9221aec445"
          },
          "remote_id": {
            "type": "string",
            "nullable": true,
            "description": "The third-party API ID of the matching object.",
            "example": "11167"
          },
          "file_name": {
            "type": "string",
            "nullable": true,
            "description": "The attachment's name.",
            "example": "Candidate Resume"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The attachment's url.",
            "maxLength": 2000,
            "example": "http://alturl.com/p749b"
          },
          "candidate": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "2872ba14-4084-492b-be96-e5eee6fc33ef"
          },
          "attachment_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AttachmentTypeEnum"
              }
            ],
            "nullable": true,
            "description": "The attachment's type.",
            "example": "RESUME"
          }
        }
      },
      "AttachmentEndpointRequest": {
        "type": "object",
        "properties": {
          "model": {
            "$ref": "#/components/schemas/AttachmentRequest"
          },
          "remote_user_id": {
            "type": "string"
          }
        },
        "required": ["model", "remote_user_id"]
      },
      "AttachmentRequest": {
        "type": "object",
        "description": "# The Attachment Object\n### Description\nThe `Attachment` object is used to represent a attachment for a candidate.\n### Usage Example\nFetch from the `LIST Attachments` endpoint and view attachments accessible by a company.",
        "properties": {
          "remote_id": {
            "type": "string",
            "nullable": true,
            "description": "The third-party API ID of the matching object.",
            "example": "11167"
          },
          "file_name": {
            "type": "string",
            "nullable": true,
            "description": "The attachment's name.",
            "example": "Candidate Resume"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The attachment's url.",
            "maxLength": 2000,
            "example": "http://alturl.com/p749b"
          },
          "candidate": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "2872ba14-4084-492b-be96-e5eee6fc33ef"
          },
          "attachment_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AttachmentTypeEnum"
              }
            ],
            "nullable": true,
            "description": "The attachment's type.",
            "example": "RESUME"
          },
          "integration_params": {
            "type": "object",
            "additionalProperties": {},
            "writeOnly": true,
            "nullable": true,
            "example": {
              "unique_integration_field": "unique_integration_field_value"
            }
          },
          "linked_account_params": {
            "type": "object",
            "additionalProperties": {},
            "writeOnly": true,
            "nullable": true,
            "example": {
              "unique_linked_account_field": "unique_linked_account_field_value"
            }
          }
        }
      },
      "AttachmentResponse": {
        "type": "object",
        "properties": {
          "model": {
            "$ref": "#/components/schemas/Attachment"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WarningValidationProblem"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorValidationProblem"
            }
          },
          "logs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DebugModeLog"
            }
          }
        },
        "required": ["errors", "model", "warnings"]
      },
      "AttachmentTypeEnum": {
        "enum": ["RESUME", "COVER_LETTER", "OFFER_LETTER", "OTHER"],
        "type": "string"
      },
      "AvailableActions": {
        "type": "object",
        "description": "# The AvailableActions Object\n### Description\nThe `Activity` object is used to see all available model/operation combinations for an integration.\n\n### Usage Example\nFetch all the actions available for the `Zenefits` integration.",
        "properties": {
          "integration": {
            "$ref": "#/components/schemas/AccountIntegration",
            "example": {
              "name": "Lever",
              "categories": ["ats"],
              "image": "https://merge-api-production.s3.amazonaws.com/media/Lever_Logo.png",
              "square_image": "https://merge-api-production.s3.amazonaws.com/media/Lever_Square_Logo.png",
              "color": "#262A34"
            }
          },
          "passthrough_available": {
            "type": "boolean",
            "example": true
          },
          "available_model_operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModelOperation"
            },
            "example": [
              {
                "model_name": "Candidate",
                "available_operations": ["FETCH", "CREATE"],
                "required_post_parameters": ["remote_user_id"],
                "supported_fields": [
                  "first_name",
                  "last_name",
                  "company",
                  "title"
                ]
              }
            ]
          }
        },
        "required": ["integration", "passthrough_available"]
      },
      "Candidate": {
        "type": "object",
        "description": "# The Candidate Object\n### Description\nThe `Candidate` object is used to represent a Candidate for various positions.\n### Usage Example\nFetch from the `LIST Candidates` endpoint and filter by `ID` to show all candidates.",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "521b18c2-4d01-4297-b451-19858d07c133"
          },
          "remote_id": {
            "type": "string",
            "nullable": true,
            "description": "The third-party API ID of the matching object.",
            "example": "21198"
          },
          "first_name": {
            "type": "string",
            "nullable": true,
            "description": "The candidate's first name.",
            "example": "Gil"
          },
          "last_name": {
            "type": "string",
            "nullable": true,
            "description": "The candidate's last name.",
            "example": "Feig"
          },
          "company": {
            "type": "string",
            "nullable": true,
            "description": "The candidate's current company.",
            "example": "Columbia Dining App."
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "The candidate's current title.",
            "example": "Software Engineer"
          },
          "remote_created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the third party's candidate was created.",
            "example": "2021-10-15T00:00:00Z"
          },
          "remote_updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the third party's candidate was updated.",
            "example": "2021-10-16T00:00:00Z"
          },
          "last_interaction_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the most recent candidate interaction occurred.",
            "example": "2021-10-17T00:00:00Z"
          },
          "is_private": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether or not the candidate is private.",
            "example": true
          },
          "can_email": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether or not the candidate can be emailed.",
            "example": true
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true,
              "description": "The candidate's locations."
            },
            "nullable": true,
            "description": "The candidate's locations.",
            "example": ["San Francisco", "New York", "Miami"]
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            },
            "readOnly": true,
            "example": [
              {
                "value": "+1234567890",
                "phone_number_type": "MOBILE"
              }
            ]
          },
          "email_addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailAddress"
            },
            "readOnly": true,
            "example": [
              {
                "value": "hello@merge.dev",
                "email_address_type": "PERSONAL"
              }
            ]
          },
          "urls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Url"
            },
            "readOnly": true,
            "example": [
              {
                "value": "http://alturl.com/p749b",
                "url_type": "BLOG"
              }
            ]
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["High-Priority"],
            "description": "Array of `Tag` names as strings."
          },
          "applications": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            },
            "example": [
              "29eb9867-ce2a-403f-b8ce-f2844b89f078",
              "b4d08e5c-de00-4d64-a29f-66addac9af99",
              "4ff877d2-fb3e-4a5b-a7a5-168ddf2ffa56"
            ],
            "description": "Array of `Application` object IDs."
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            },
            "example": ["bea08964-32b4-4a20-8bb4-2612ba09de1d"],
            "description": "Array of `Attachment` object IDs."
          },
          "custom_fields": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "Custom fields configured for a given model."
          }
        }
      },
      "CandidateEndpointRequest": {
        "type": "object",
        "properties": {
          "model": {
            "$ref": "#/components/schemas/CandidateRequest"
          },
          "remote_user_id": {
            "type": "string"
          }
        },
        "required": ["model", "remote_user_id"]
      },
      "CandidateRequest": {
        "type": "object",
        "description": "# The Candidate Object\n### Description\nThe `Candidate` object is used to represent a Candidate for various positions.\n### Usage Example\nFetch from the `LIST Candidates` endpoint and filter by `ID` to show all candidates.",
        "properties": {
          "remote_id": {
            "type": "string",
            "nullable": true,
            "description": "The third-party API ID of the matching object.",
            "example": "21198"
          },
          "first_name": {
            "type": "string",
            "nullable": true,
            "description": "The candidate's first name.",
            "example": "Gil"
          },
          "last_name": {
            "type": "string",
            "nullable": true,
            "description": "The candidate's last name.",
            "example": "Feig"
          },
          "company": {
            "type": "string",
            "nullable": true,
            "description": "The candidate's current company.",
            "example": "Columbia Dining App."
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "The candidate's current title.",
            "example": "Software Engineer"
          },
          "remote_created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the third party's candidate was created.",
            "example": "2021-10-15T00:00:00Z"
          },
          "remote_updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the third party's candidate was updated.",
            "example": "2021-10-16T00:00:00Z"
          },
          "last_interaction_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the most recent candidate interaction occurred.",
            "example": "2021-10-17T00:00:00Z"
          },
          "is_private": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether or not the candidate is private.",
            "example": true
          },
          "can_email": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether or not the candidate can be emailed.",
            "example": true
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true,
              "description": "The candidate's locations."
            },
            "nullable": true,
            "description": "The candidate's locations.",
            "example": ["San Francisco", "New York", "Miami"]
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["High-Priority"],
            "description": "Array of `Tag` names as strings."
          },
          "applications": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            },
            "example": [
              "29eb9867-ce2a-403f-b8ce-f2844b89f078",
              "b4d08e5c-de00-4d64-a29f-66addac9af99",
              "4ff877d2-fb3e-4a5b-a7a5-168ddf2ffa56"
            ],
            "description": "Array of `Application` object IDs."
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            },
            "example": ["bea08964-32b4-4a20-8bb4-2612ba09de1d"],
            "description": "Array of `Attachment` object IDs."
          },
          "custom_fields": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "Custom fields configured for a given model."
          },
          "remote_template_id": {
            "type": "string",
            "writeOnly": true,
            "nullable": true,
            "minLength": 1,
            "example": "92830948203"
          },
          "integration_params": {
            "type": "object",
            "additionalProperties": {},
            "writeOnly": true,
            "nullable": true,
            "example": {
              "unique_integration_field": "unique_integration_field_value"
            }
          },
          "linked_account_params": {
            "type": "object",
            "additionalProperties": {},
            "writeOnly": true,
            "nullable": true,
            "example": {
              "unique_linked_account_field": "unique_linked_account_field_value"
            }
          }
        }
      },
      "CandidateResponse": {
        "type": "object",
        "properties": {
          "model": {
            "$ref": "#/components/schemas/Candidate"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WarningValidationProblem"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorValidationProblem"
            }
          },
          "logs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DebugModeLog"
            }
          }
        },
        "required": ["errors", "model", "warnings"]
      },
      "CategoriesEnum": {
        "enum": ["hris", "ats", "accounting", "ticketing"],
        "type": "string"
      },
      "CategoryEnum": {
        "enum": ["hris", "ats", "accounting", "ticketing"],
        "type": "string"
      },
      "DataPassthroughRequest": {
        "type": "object",
        "description": "# The DataPassthrough Object\n### Description\nThe `DataPassthrough` object is used to send information to an otherwise-unsupported third-party endpoint.\n\n### Usage Example\nCreate a `DataPassthrough` to get team hierarchies from your Rippling integration.",
        "properties": {
          "method": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MethodEnum"
              }
            ],
            "example": "POST"
          },
          "path": {
            "type": "string",
            "minLength": 1,
            "example": "/scooters"
          },
          "base_url_override": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "data": {
            "type": "string",
            "nullable": true,
            "minLength": 1,
            "example": "{\"company\": \"Lime\", \"model\": \"Gen 2.5\"}"
          },
          "multipart_form_data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MultipartFormFieldRequest"
            },
            "nullable": true,
            "description": "Pass an array of `MultipartFormField` objects in here instead of using the `data` param if `request_format` is set to `MULTIPART`."
          },
          "headers": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "The headers to use for the request (Merge will handle the account's authorization headers). `Content-Type` header is required for passthrough. Choose content type corresponding to expected format of receiving server.",
            "example": {
              "EXTRA-HEADER": "value"
            }
          },
          "request_format": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RequestFormatEnum"
              }
            ],
            "nullable": true,
            "example": "JSON"
          }
        },
        "required": ["method", "path"]
      },
      "DebugModeLog": {
        "type": "object",
        "properties": {
          "log_id": {
            "type": "string",
            "example": "99433219-8017-4acd-bb3c-ceb23d663832"
          },
          "dashboard_view": {
            "type": "string",
            "example": "https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832"
          },
          "log_summary": {
            "$ref": "#/components/schemas/DebugModelLogSummary",
            "example": {
              "url": "https://harvest.greenhouse.io/v1/candidates/",
              "method": "POST",
              "status_code": 200
            }
          }
        },
        "required": ["dashboard_view", "log_id", "log_summary"]
      },
      "DebugModelLogSummary": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "example": "https://harvest.greenhouse.io/v1/candidates/"
          },
          "method": {
            "type": "string",
            "example": "POST"
          },
          "status_code": {
            "type": "integer",
            "example": 200
          }
        },
        "required": ["method", "status_code", "url"]
      },
      "Department": {
        "type": "object",
        "description": "# The Department Object\n### Description\nThe `Department` object is used to represent a department within a company.\n### Usage Example\nFetch from the `LIST Departments` endpoint and view the departments within a company.",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "5b3c1341-a20f-4e51-b72c-f3830a16c97b"
          },
          "remote_id": {
            "type": "string",
            "nullable": true,
            "description": "The third-party API ID of the matching object.",
            "example": "23456"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "The department's name.",
            "example": "Engineering"
          }
        }
      },
      "DisabilityStatusEnum": {
        "enum": [
          "YES_I_HAVE_A_DISABILITY_OR_PREVIOUSLY_HAD_A_DISABILITY",
          "NO_I_DONT_HAVE_A_DISABILITY",
          "I_DONT_WISH_TO_ANSWER"
        ],
        "type": "string"
      },
      "EEOC": {
        "type": "object",
        "description": "# The EEOC Object\n### Description\nThe `EEOC` object is used to represent the Equal Employment Opportunity Commission information for a candidate.\n### Usage Example\nFetch from the `LIST EEOCs` endpoint and filter by `candidate` to show all EEOC information for a candidate.",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "f7dd7b4f-237e-4772-8bd4-3246384c6c58"
          },
          "remote_id": {
            "type": "string",
            "nullable": true,
            "description": "The third-party API ID of the matching object.",
            "example": "76"
          },
          "candidate": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "f963f34d-3d2f-4f77-b557-cf36bc7e6498"
          },
          "submitted_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the information was submitted.",
            "example": "2021-10-15T00:00:00Z"
          },
          "race": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RaceEnum"
              }
            ],
            "nullable": true,
            "description": "The candidate's race.",
            "example": "HISPANIC_OR_LATINO"
          },
          "gender": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GenderEnum"
              }
            ],
            "nullable": true,
            "description": "The candidate's gender.",
            "example": "FEMALE"
          },
          "veteran_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VeteranStatusEnum"
              }
            ],
            "nullable": true,
            "description": "The candidate's veteran status.",
            "example": "I_AM_NOT_A_PROTECTED_VETERAN"
          },
          "disability_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DisabilityStatusEnum"
              }
            ],
            "nullable": true,
            "description": "The candidate's disability status.",
            "example": "I_DONT_WISH_TO_ANSWER"
          }
        }
      },
      "EmailAddress": {
        "type": "object",
        "description": "# The EmailAddress Object\n### Description\nThe `EmailAddress` object is used to represent a candidate's email address.\n### Usage Example\nFetch from the `GET Candidate` endpoint and view their email addresses.",
        "properties": {
          "value": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "description": "The email address.",
            "maxLength": 254,
            "example": "merge_is_hiring@merge.dev"
          },
          "email_address_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmailAddressTypeEnum"
              }
            ],
            "nullable": true,
            "description": "The type of email address.",
            "example": "PERSONAL"
          }
        }
      },
      "EmailAddressRequest": {
        "type": "object",
        "description": "# The EmailAddress Object\n### Description\nThe `EmailAddress` object is used to represent a candidate's email address.\n### Usage Example\nFetch from the `GET Candidate` endpoint and view their email addresses.",
        "properties": {
          "value": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "description": "The email address.",
            "maxLength": 254,
            "example": "merge_is_hiring@merge.dev"
          },
          "email_address_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmailAddressTypeEnum"
              }
            ],
            "nullable": true,
            "description": "The type of email address.",
            "example": "PERSONAL"
          }
        }
      },
      "EmailAddressTypeEnum": {
        "enum": ["PERSONAL", "WORK", "OTHER"],
        "type": "string"
      },
      "EncodingEnum": {
        "enum": ["RAW", "BASE64"],
        "type": "string"
      },
      "EndUserDetailsRequest": {
        "type": "object",
        "properties": {
          "end_user_email_address": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "end_user_organization_name": {
            "type": "string",
            "minLength": 1
          },
          "end_user_origin_id": {
            "type": "string",
            "minLength": 1
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoriesEnum"
            }
          },
          "integration": {
            "type": "string",
            "nullable": true,
            "minLength": 1,
            "description": "The slug of a specific pre-selected integration for this linking flow token, for examples of slugs see https://www.merge.dev/docs/basics/integration-metadata"
          },
          "link_expiry_mins": {
            "type": "integer",
            "maximum": 720,
            "minimum": 30,
            "default": 30,
            "description": "An integer number of minutes between [30, 720] for how long this token is valid. Defaults to 30"
          }
        },
        "required": [
          "end_user_email_address",
          "end_user_organization_name",
          "end_user_origin_id"
        ]
      },
      "ErrorValidationProblem": {
        "type": "object",
        "properties": {
          "source": {
            "$ref": "#/components/schemas/ValidationProblemSource",
            "example": {
              "pointer": "/model/custom_fields"
            }
          },
          "title": {
            "type": "string",
            "example": "Missing Required Field"
          },
          "detail": {
            "type": "string",
            "example": "custom_fields is a required field on model."
          },
          "problem_type": {
            "type": "string",
            "example": "MISSING_REQUIRED_FIELD"
          }
        },
        "required": ["detail", "problem_type", "title"]
      },
      "GenderEnum": {
        "enum": [
          "MALE",
          "FEMALE",
          "NON-BINARY",
          "OTHER",
          "DECLINE_TO_SELF_IDENTIFY"
        ],
        "type": "string"
      },
      "GenerateRemoteKeyRequest": {
        "type": "object",
        "description": "# The GenerateRemoteKey Object\n### Description\nThe `GenerateRemoteKey` object is used to represent a request for a new remote key.\n\n### Usage Example\nPost a `GenerateRemoteKey` to create a new remote key.",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "example": "Remote Deployment Key 1"
          }
        },
        "required": ["name"]
      },
      "IgnoreCommonModel": {
        "type": "object",
        "properties": {
          "reason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReasonEnum"
              }
            ],
            "example": "GENERAL_CUSTOMER_REQUEST"
          },
          "message": {
            "type": "string",
            "maxLength": 256,
            "example": "deletion request by user id 51903790-7dfe-4053-8d63-5a10cc4ffd39"
          }
        },
        "required": ["reason"]
      },
      "IgnoreCommonModelRequest": {
        "type": "object",
        "properties": {
          "reason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReasonEnum"
              }
            ],
            "example": "GENERAL_CUSTOMER_REQUEST"
          },
          "message": {
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "example": "deletion request by user id 51903790-7dfe-4053-8d63-5a10cc4ffd39"
          }
        },
        "required": ["reason"]
      },
      "Issue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "status": {
            "$ref": "#/components/schemas/IssueStatusEnum"
          },
          "error_description": {
            "type": "string"
          },
          "end_user": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "first_incident_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "last_incident_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "is_muted": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "required": ["error_description"]
      },
      "IssueStatusEnum": {
        "enum": ["ONGOING", "RESOLVED"],
        "type": "string"
      },
      "Job": {
        "type": "object",
        "description": "# The Job Object\n### Description\nThe `Job` object is used to represent a Job offering at a company.\n### Usage Example\nFetch from the `LIST Jobs` endpoint to show all job postings.",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "022a2bef-57e5-4def-8ed2-7c41bd9a5ed8"
          },
          "remote_id": {
            "type": "string",
            "nullable": true,
            "description": "The third-party API ID of the matching object.",
            "example": "8765432"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "The job's name.",
            "example": "Software Engineer (Merge is actually hiring btw)"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "The job's description.",
            "example": "<b>If you're reading this documentation, you might be a good fit for Merge!</b>"
          },
          "code": {
            "type": "string",
            "nullable": true,
            "description": "The job's code. Typically an additional identifier used to reference the particular job that is displayed on the ATS.",
            "example": "C0025"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobStatusEnum"
              }
            ],
            "nullable": true,
            "description": "The job's status.",
            "example": "OPEN"
          },
          "remote_created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the third party's job was created.",
            "example": "2021-10-15T00:00:00Z"
          },
          "remote_updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the third party's job was updated.",
            "example": "2021-10-16T00:00:00Z"
          },
          "confidential": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether the job is confidential.",
            "example": true
          },
          "departments": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            },
            "example": [
              "5b3c1341-a20f-4e51-b72c-f3830a16c97b",
              "d6e687d6-0c36-48a1-8114-35324b5cb38f"
            ],
            "description": "IDs of `Department` objects for this `Job`."
          },
          "offices": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            },
            "example": ["9871b4a9-f5d2-4f3b-a66b-dfedbed42c46"],
            "description": "IDs of `Office` objects for this `Job`."
          },
          "hiring_managers": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            },
            "example": ["787ed912-33ec-444e-a215-8d71cc42fc12"],
            "description": "IDs of `RemoteUser` objects that serve as hiring managers for this `Job`."
          }
        },
        "x-merge-sample-json": "{\"id\": \"022a2bef-57e5-4def-8ed2-7c41bd9a5ed8\", \"remote_id\": \"8765432\", \"name\": \"Software Engineer (Merge is actually hiring btw)\", \"description\": \"<b>If you're reading this documentation, you might be a good fit for Merge!</b>\", \"code\": \"C0025\", \"status\": \"OPEN\", \"remote_created_at\": \"2021-10-15T00:00:00Z\", \"remote_updated_at\": \"2021-10-16T00:00:00Z\", \"confidential\": true, \"departments\": [\"5b3c1341-a20f-4e51-b72c-f3830a16c97b\", \"d6e687d6-0c36-48a1-8114-35324b5cb38f\"], \"offices\": [\"9871b4a9-f5d2-4f3b-a66b-dfedbed42c46\"], \"hiring_managers\": [\"787ed912-33ec-444e-a215-8d71cc42fc12\"], \"remote_data\": [{\"path\": \"/positions\", \"data\": {\"example\": \"Varies by platform\"}}]}"
      },
      "JobInterviewStage": {
        "type": "object",
        "description": "# The JobInterviewStage Object\n### Description\nThe `JobInterviewStage` object is used to represent the stage of an interview\n### Usage Example\nFetch from the `LIST JobInterviewStages` endpoint and view the job interview stages used by a company.",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "f9813dd5-e70b-484c-91d8-00acd6065b07"
          },
          "remote_id": {
            "type": "string",
            "nullable": true,
            "description": "The third-party API ID of the matching object.",
            "example": "876556788"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "The stage's name.",
            "example": "Phone Screen"
          },
          "job": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "ba7d9648-5316-4a80-8d73-4e636cef5a90"
          }
        }
      },
      "JobStatusEnum": {
        "enum": ["OPEN", "CLOSED", "DRAFT", "ARCHIVED", "PENDING"],
        "type": "string"
      },
      "LinkToken": {
        "type": "object",
        "properties": {
          "link_token": {
            "type": "string",
            "example": "necdP7FtdASl1fQwm62be2_dM4wBG8_GactqoUV0"
          },
          "integration_name": {
            "type": "string",
            "example": "Lever"
          }
        },
        "required": ["integration_name", "link_token"]
      },
      "LinkedAccountStatus": {
        "type": "object",
        "properties": {
          "linked_account_status": {
            "type": "string"
          },
          "can_make_request": {
            "type": "boolean"
          }
        },
        "required": ["can_make_request", "linked_account_status"]
      },
      "MetaResponse": {
        "type": "object",
        "properties": {
          "request_schema": {
            "type": "object",
            "additionalProperties": {}
          },
          "status": {
            "$ref": "#/components/schemas/LinkedAccountStatus"
          },
          "has_conditional_params": {
            "type": "boolean"
          },
          "has_required_linked_account_params": {
            "type": "boolean"
          }
        },
        "required": [
          "has_conditional_params",
          "has_required_linked_account_params",
          "request_schema"
        ]
      },
      "MethodEnum": {
        "enum": ["GET", "OPTIONS", "HEAD", "POST", "PUT", "PATCH", "DELETE"],
        "type": "string"
      },
      "ModelOperation": {
        "type": "object",
        "description": "# The ModelOperation Object\n### Description\nThe `ModelOperation` object is used to represent the operations that are currently supported for a given model.\n\n### Usage Example\nView what operations are supported for the `Candidate` endpoint.",
        "properties": {
          "model_name": {
            "type": "string",
            "example": "Candidate"
          },
          "available_operations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["FETCH", "CREATE"]
          },
          "required_post_parameters": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["remote_user_id"]
          },
          "supported_fields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["first_name", "last_name", "company", "title"]
          }
        },
        "required": [
          "available_operations",
          "model_name",
          "required_post_parameters",
          "supported_fields"
        ]
      },
      "MultipartFormFieldRequest": {
        "type": "object",
        "description": "# The MultipartFormField Object\n### Description\nThe `MultipartFormField` object is used to represent fields in an HTTP request using `multipart/form-data`.\n\n### Usage Example\nCreate a `MultipartFormField` to define a multipart form entry.",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "description": "The name of the form field",
            "example": "resume"
          },
          "data": {
            "type": "string",
            "minLength": 1,
            "description": "The data for the form field.",
            "example": "SW50ZWdyYXRlIGZhc3QKSW50ZWdyYXRlIG9uY2U="
          },
          "encoding": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EncodingEnum"
              }
            ],
            "nullable": true,
            "default": "RAW",
            "description": "The encoding of the value of `data`. Defaults to `RAW` if not defined.",
            "example": "BASE64"
          },
          "file_name": {
            "type": "string",
            "nullable": true,
            "minLength": 1,
            "description": "The file name of the form field, if the field is for a file.",
            "example": "resume.pdf"
          },
          "content_type": {
            "type": "string",
            "nullable": true,
            "minLength": 1,
            "description": "The MIME type of the file, if the field is for a file.",
            "example": "application/pdf"
          }
        },
        "required": ["data", "name"]
      },
      "Offer": {
        "type": "object",
        "description": "# The Offer Object\n### Description\nThe `Offer` object is used to represent an offer for an application.\n### Usage Example\nFetch from the `LIST Offers` endpoint and filter by `ID` to show all offers.",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "dd85625c-6a59-446f-a317-6de64d83bae7"
          },
          "remote_id": {
            "type": "string",
            "nullable": true,
            "description": "The third-party API ID of the matching object.",
            "example": "9876"
          },
          "application": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "2872ba14-4084-492b-be96-e5eee6fc33ef"
          },
          "creator": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "52bf9b5e-0beb-4f6f-8a72-cd4dca7ca633"
          },
          "remote_created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the third party's offer was created.",
            "example": "2021-10-15T00:00:00Z"
          },
          "closed_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the offer was closed.",
            "example": "2021-10-16T00:00:00Z"
          },
          "sent_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the offer was sent.",
            "example": "2021-10-15T00:00:00Z"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The employment start date on the offer.",
            "example": "2021-11-15T00:00:00Z"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OfferStatusEnum"
              }
            ],
            "nullable": true,
            "description": "The offer's status.",
            "example": "SENT"
          }
        }
      },
      "OfferStatusEnum": {
        "enum": [
          "DRAFT",
          "APPROVAL-SENT",
          "APPROVED",
          "SENT",
          "SENT-MANUALLY",
          "OPENED",
          "DENIED",
          "SIGNED",
          "DEPRECATED"
        ],
        "type": "string"
      },
      "Office": {
        "type": "object",
        "description": "# The Office Object\n### Description\nThe `Office` object is used to represent an office within a company.\n### Usage Example\nFetch from the `LIST Offices` endpoint and view the offices within a company.",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "9871b4a9-f5d2-4f3b-a66b-dfedbed42c46"
          },
          "remote_id": {
            "type": "string",
            "nullable": true,
            "description": "The third-party API ID of the matching object.",
            "example": "876556788"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "The office's name.",
            "example": "SF Office"
          },
          "location": {
            "type": "string",
            "nullable": true,
            "description": "The office's location.",
            "example": "Embarcadero Center 2"
          }
        },
        "x-merge-sample-json": "{\"id\": \"9871b4a9-f5d2-4f3b-a66b-dfedbed42c46\", \"remote_id\": \"876556788\", \"name\": \"SF Office\", \"location\": \"Embarcadero Center 2\", \"remote_data\": [{\"path\": \"/locations\", \"data\": {\"example\": \"Varies by platform\"}}]}"
      },
      "OverallRecommendationEnum": {
        "enum": ["DEFINITELY_NO", "NO", "YES", "STRONG_YES", "NO_DECISION"],
        "type": "string"
      },
      "PaginatedAccountDetailsAndActionsList": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true,
            "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountDetailsAndActions"
            }
          }
        }
      },
      "PaginatedActivityList": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true,
            "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Activity"
            }
          }
        }
      },
      "PaginatedApplicationList": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true,
            "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Application"
            }
          }
        }
      },
      "PaginatedAttachmentList": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true,
            "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attachment"
            }
          }
        }
      },
      "PaginatedCandidateList": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true,
            "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Candidate"
            }
          }
        }
      },
      "PaginatedDepartmentList": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true,
            "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Department"
            }
          }
        }
      },
      "PaginatedEEOCList": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true,
            "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEOC"
            }
          }
        }
      },
      "PaginatedIssueList": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true,
            "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Issue"
            }
          }
        }
      },
      "PaginatedJobInterviewStageList": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true,
            "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobInterviewStage"
            }
          }
        }
      },
      "PaginatedJobList": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true,
            "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Job"
            }
          }
        }
      },
      "PaginatedOfferList": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true,
            "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Offer"
            }
          }
        }
      },
      "PaginatedOfficeList": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true,
            "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Office"
            }
          }
        }
      },
      "PaginatedRejectReasonList": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true,
            "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RejectReason"
            }
          }
        }
      },
      "PaginatedRemoteUserList": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true,
            "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RemoteUser"
            }
          }
        }
      },
      "PaginatedScheduledInterviewList": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true,
            "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduledInterview"
            }
          }
        }
      },
      "PaginatedScorecardList": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true,
            "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Scorecard"
            }
          }
        }
      },
      "PaginatedSyncStatusList": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true,
            "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SyncStatus"
            }
          }
        }
      },
      "PaginatedTagList": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true,
            "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          }
        }
      },
      "PhoneNumber": {
        "type": "object",
        "description": "# The PhoneNumber Object\n### Description\nThe `PhoneNumber` object is used to represent a candidate's phone number.\n### Usage Example\nFetch from the `GET Candidate` endpoint and view their phone numbers.",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true,
            "description": "The phone number.",
            "example": "+3198675309"
          },
          "phone_number_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberTypeEnum"
              }
            ],
            "nullable": true,
            "description": "The type of phone number.",
            "example": "HOME"
          }
        }
      },
      "PhoneNumberRequest": {
        "type": "object",
        "description": "# The PhoneNumber Object\n### Description\nThe `PhoneNumber` object is used to represent a candidate's phone number.\n### Usage Example\nFetch from the `GET Candidate` endpoint and view their phone numbers.",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true,
            "description": "The phone number.",
            "example": "+3198675309"
          },
          "phone_number_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberTypeEnum"
              }
            ],
            "nullable": true,
            "description": "The type of phone number.",
            "example": "HOME"
          }
        }
      },
      "PhoneNumberTypeEnum": {
        "enum": ["HOME", "WORK", "MOBILE", "SKYPE", "OTHER"],
        "type": "string"
      },
      "RaceEnum": {
        "enum": [
          "AMERICAN_INDIAN_OR_ALASKAN_NATIVE",
          "ASIAN",
          "BLACK_OR_AFRICAN_AMERICAN",
          "HISPANIC_OR_LATINO",
          "WHITE",
          "NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER",
          "TWO_OR_MORE_RACES",
          "DECLINE_TO_SELF_IDENTIFY"
        ],
        "type": "string"
      },
      "ReasonEnum": {
        "enum": ["GENERAL_CUSTOMER_REQUEST", "GDPR", "OTHER"],
        "type": "string"
      },
      "RejectReason": {
        "type": "object",
        "description": "# The RejectReason Object\n### Description\nThe `RejectReason` object is used to represent a reason for rejecting an application.\n### Usage Example\nFetch from the `LIST RejectReasons` endpoint and filter by `ID` to show all reasons.",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "8be99a4a-f8d4-4339-bf1e-30eac970e217"
          },
          "remote_id": {
            "type": "string",
            "nullable": true,
            "description": "The third-party API ID of the matching object.",
            "example": "876556788"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "The rejection reason’s name.",
            "example": "Not passionate enough about APIs."
          }
        }
      },
      "RemoteKey": {
        "type": "object",
        "description": "# The RemoteKey Object\n### Description\nThe `RemoteKey` object is used to represent a request for a new remote key.\n\n### Usage Example\nPost a `GenerateRemoteKey` to receive a new `RemoteKey`.",
        "properties": {
          "name": {
            "type": "string",
            "example": "Remote Deployment Key 1"
          },
          "key": {
            "type": "string",
            "example": "hXY57W0g0WkdRHjCaPvwijK63fwfN-o_Wh7f30SLTq_uPCOLo-WFcA"
          }
        },
        "required": ["key", "name"]
      },
      "RemoteKeyForRegenerationRequest": {
        "type": "object",
        "description": "# The RemoteKeyForRegeneration Object\n### Description\nThe `RemoteKeyForRegeneration` object is used to exchange an old remote key for a new one\n\n### Usage Example\nPost a `RemoteKeyForRegeneration` to swap out an old remote key for a new one",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "example": "Remote Deployment Key 1"
          }
        },
        "required": ["name"]
      },
      "RemoteResponse": {
        "type": "object",
        "description": "# The RemoteResponse Object\n### Description\nThe `RemoteResponse` object is used to represent information returned from a third-party endpoint.\n\n### Usage Example\nView the `RemoteResponse` returned from your `DataPassthrough`.",
        "properties": {
          "method": {
            "type": "string",
            "example": "GET"
          },
          "path": {
            "type": "string",
            "example": "/scooters"
          },
          "status": {
            "type": "integer",
            "example": 200
          },
          "response": {
            "type": "object",
            "additionalProperties": {},
            "example": {
              "scooters": [
                {
                  "company": "Lime",
                  "model": "Gen 2.5"
                },
                {
                  "company": "Bird",
                  "model": "Bird Zero"
                }
              ]
            }
          },
          "headers": {
            "type": "object",
            "additionalProperties": {},
            "example": {
              "EXTRA-HEADER": "value",
              "Authorization": "<redacted>"
            }
          }
        },
        "required": ["method", "path", "response", "status"]
      },
      "RemoteUser": {
        "type": "object",
        "description": "# The RemoteUser Object\n### Description\nThe `RemoteUser` object is used to represent a third party user.\n### Usage Example\nFetch from the `LIST RemoteUsers` endpoint to show all users for a third party.",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "b82302de-852e-4e60-b050-edf9da3b7c02"
          },
          "remote_id": {
            "type": "string",
            "nullable": true,
            "description": "The third-party API ID of the matching object.",
            "example": "344321"
          },
          "first_name": {
            "type": "string",
            "nullable": true,
            "description": "The user's first name.",
            "example": "Shensi"
          },
          "last_name": {
            "type": "string",
            "nullable": true,
            "description": "The user's last name.",
            "example": "Ding"
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "description": "The user's email.",
            "maxLength": 254,
            "example": "hello@merge.dev"
          },
          "disabled": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether the user's account had been disabled."
          },
          "remote_created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the third party's user was created.",
            "example": "2020-11-10T00:00:00Z"
          },
          "access_role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccessRoleEnum"
              }
            ],
            "nullable": true,
            "description": "The user's role.",
            "example": "SUPER_ADMIN"
          }
        },
        "x-merge-sample-json": "{\"id\": \"b82302de-852e-4e60-b050-edf9da3b7c02\", \"remote_id\": \"344321\", \"first_name\": \"Shensi\", \"last_name\": \"Ding\", \"email\": \"hello@merge.dev\", \"disabled\": false, \"remote_created_at\": \"2020-11-10T00:00:00Z\", \"access_role\": \"SUPER_ADMIN\", \"remote_data\": [{\"path\": \"/users\", \"data\": {\"example\": \"Varies by platform\"}}]}"
      },
      "RequestFormatEnum": {
        "enum": ["JSON", "XML", "MULTIPART"],
        "type": "string"
      },
      "ScheduledInterview": {
        "type": "object",
        "description": "# The ScheduledInterview Object\n### Description\nThe `ScheduledInterview` object is used to represent an interview\n### Usage Example\nFetch from the `LIST ScheduledInterviews` endpoint and filter by `interviewers` to show all office locations.",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "b8faf072-98b9-4445-8a9a-6b4950efca19"
          },
          "remote_id": {
            "type": "string",
            "nullable": true,
            "description": "The third-party API ID of the matching object.",
            "example": "3"
          },
          "application": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "92e8a369-fffe-430d-b93a-f7e8a16563f1"
          },
          "job_interview_stage": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "2f7adb59-3fe6-4b5b-aef6-563f72bd13dc"
          },
          "organizer": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "52bf9b5e-0beb-4f6f-8a72-cd4dca7ca633"
          },
          "interviewers": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            },
            "example": [
              "f9813dd5-e70b-484c-91d8-00acd6065b07",
              "89a86fcf-d540-4e6b-ac3d-ce07c4ec9b3c"
            ],
            "description": "Array of `RemoteUser` IDs."
          },
          "location": {
            "type": "string",
            "nullable": true,
            "description": "The interview's location.",
            "example": "Embarcadero Center 2"
          },
          "start_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the interview was started.",
            "example": "2021-10-15T00:00:00Z"
          },
          "end_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the interview was ended.",
            "example": "2021-10-15T02:00:00Z"
          },
          "remote_created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the third party's interview was created.",
            "example": "2021-10-15T00:00:00Z"
          },
          "remote_updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the third party's interview was updated.",
            "example": "2021-10-15T00:00:00Z"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScheduledInterviewStatusEnum"
              }
            ],
            "nullable": true,
            "description": "The interview's status.",
            "example": "SCHEDULED"
          }
        }
      },
      "ScheduledInterviewStatusEnum": {
        "enum": ["SCHEDULED", "AWAITING_FEEDBACK", "COMPLETE"],
        "type": "string"
      },
      "Scorecard": {
        "type": "object",
        "description": "# The Scorecard Object\n### Description\nThe `Scorecard` object is used to represent a Scorecard for an interview\n### Usage Example\nFetch from the `LIST Scorecards` endpoint and filter by `application` to show all scorecard for an applicant.",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "3eab2f17-eeb1-450d-97f0-029d8be1e06f"
          },
          "remote_id": {
            "type": "string",
            "nullable": true,
            "description": "The third-party API ID of the matching object.",
            "example": "22234"
          },
          "application": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "2872ba14-4084-492b-be96-e5eee6fc33ef"
          },
          "interview": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "52bf9b5e-0beb-4f6f-8a72-cd4dca7ca633"
          },
          "interviewer": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "bbb519a3-246e-4b95-b6b3-dba16107ba6b"
          },
          "remote_created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the third party's scorecard was created.",
            "example": "2021-10-15T00:00:00Z"
          },
          "submitted_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the scorecard was submitted.",
            "example": "2021-10-15T00:00:00Z"
          },
          "overall_recommendation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OverallRecommendationEnum"
              }
            ],
            "nullable": true,
            "description": "The inteviewer's recommendation.",
            "example": "STRONG_YES"
          }
        }
      },
      "SyncStatus": {
        "type": "object",
        "description": "# The SyncStatus Object\n### Description\nThe `SyncStatus` object is used to represent the syncing state of an account\n\n### Usage Example\nView the `SyncStatus` for an account to see how recently its models were synced.",
        "properties": {
          "model_name": {
            "type": "string",
            "example": "Candidate"
          },
          "model_id": {
            "type": "string",
            "example": "ats.Candidate"
          },
          "last_sync_start": {
            "type": "string",
            "format": "date-time",
            "example": "2021-03-30T19:44:18.695973Z"
          },
          "next_sync_start": {
            "type": "string",
            "format": "date-time",
            "example": "2021-03-30T20:44:18.662942Z"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SyncStatusStatusEnum"
              }
            ],
            "example": "SYNCING"
          },
          "is_initial_sync": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "is_initial_sync",
          "last_sync_start",
          "model_id",
          "model_name",
          "next_sync_start",
          "status"
        ],
        "x-merge-sample-json": "{\"model_name\": \"Candidate\", \"model_id\": \"ats.Candidate\", \"last_sync_start\": \"2021-03-30T19:44:18.695973Z\", \"next_sync_start\": \"2021-03-30T20:44:18.662942Z\", \"status\": \"SYNCING\", \"is_initial_sync\": true}"
      },
      "SyncStatusStatusEnum": {
        "enum": ["SYNCING", "DONE", "FAILED", "DISABLED"],
        "type": "string"
      },
      "Tag": {
        "type": "object",
        "description": "# The Tag Object\n### Description\nThe `Tag` object is used to represent a tag for a candidate.\n### Usage Example\nFetch from the `LIST Tags` endpoint and view the tags used within a company.",
        "properties": {
          "remote_id": {
            "type": "string",
            "nullable": true,
            "description": "The third-party API ID of the matching object.",
            "example": "4567"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "The tag's name.",
            "example": "High-Priority"
          }
        }
      },
      "Url": {
        "type": "object",
        "description": "# The Url Object\n### Description\nThe `Url` object is used to represent a candidate's website.\n### Usage Example\nFetch from the `GET Candidate` endpoint and view their website urls.",
        "properties": {
          "value": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The site's url.",
            "maxLength": 2000,
            "example": "http://alturl.com/p749b"
          },
          "url_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UrlTypeEnum"
              }
            ],
            "nullable": true,
            "description": "The type of site.",
            "example": "PERSONAL"
          }
        }
      },
      "UrlRequest": {
        "type": "object",
        "description": "# The Url Object\n### Description\nThe `Url` object is used to represent a candidate's website.\n### Usage Example\nFetch from the `GET Candidate` endpoint and view their website urls.",
        "properties": {
          "value": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The site's url.",
            "maxLength": 2000,
            "example": "http://alturl.com/p749b"
          },
          "url_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UrlTypeEnum"
              }
            ],
            "nullable": true,
            "description": "The type of site.",
            "example": "PERSONAL"
          }
        }
      },
      "UrlTypeEnum": {
        "enum": [
          "PERSONAL",
          "COMPANY",
          "PORTFOLIO",
          "BLOG",
          "SOCIAL_MEDIA",
          "OTHER"
        ],
        "type": "string"
      },
      "ValidationProblemSource": {
        "type": "object",
        "properties": {
          "pointer": {
            "type": "string"
          }
        },
        "required": ["pointer"]
      },
      "VeteranStatusEnum": {
        "enum": [
          "I_AM_NOT_A_PROTECTED_VETERAN",
          "I_IDENTIFY_AS_ONE_OR_MORE_OF_THE_CLASSIFICATIONS_OF_A_PROTECTED_VETERAN",
          "I_DONT_WISH_TO_ANSWER"
        ],
        "type": "string"
      },
      "VisibilityEnum": {
        "enum": ["ADMIN_ONLY", "PUBLIC", "PRIVATE"],
        "type": "string"
      },
      "WarningValidationProblem": {
        "type": "object",
        "properties": {
          "source": {
            "$ref": "#/components/schemas/ValidationProblemSource",
            "example": {
              "pointer": "/age"
            }
          },
          "title": {
            "type": "string",
            "example": "Unrecognized Field"
          },
          "detail": {
            "type": "string",
            "example": "An unrecognized field, age, was passed in with request data."
          },
          "problem_type": {
            "type": "string",
            "example": "UNRECOGNIZED_FIELD"
          }
        },
        "required": ["detail", "problem_type", "title"]
      }
    },
    "securitySchemes": {
      "tokenAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Token-based authentication with required prefix \"Token\""
      }
    }
  },
  "servers": [
    {
      "url": "https://api.merge.dev/api/ats/v1",
      "description": "Production"
    },
    {
      "url": "https://api-sandbox.merge.dev/api/ats/v1",
      "description": "Sandbox"
    }
  ]
}
